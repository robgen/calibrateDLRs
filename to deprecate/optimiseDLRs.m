% A*X <= B
A1 = -eye(numel(fragMedian)) + diag(ones(1, numel(fragMedian)-1), -1);
A2 = zeros(numel(fragMedian));
A3 = -eye(numel(fragMedian));

A = [A1, A2; A2, A3];
B = zeros(numel(startDLRdata),1);

% Aeq*X = Beq
Aeq = [];
Beq = [];

% bounds
lowerBound = 0.001 * ones(numel(startDLRdata),1);
upperBound = [[0.2 0.7 0.99]'; 1*ones(numel(startDLRdata)/2,1)];

startObj = objectiveFunction(startDLRdata, ...
                        IMstripes, LRgivenIM, empiricalMoments, ...
                        fragMedian, fragStd, ...
                        Nsamples, weightMoments);

algo = 'interior-point';
options = optimoptions('fmincon', 'Display', 'iter-detailed', ...
    'OptimalityTolerance', 1e-10, ... 
    'Algorithm', algo, 'PlotFcn',{@optimplotx,...
    @optimplotfval,@optimplotfirstorderopt});

objFun = @(DLRdata) objectiveFunction(DLRdata, ...
                        IMstripes, LRgivenIM, empiricalMoments, ...
                        fragMedian, fragStd, ...
                        Nsamples, weightMoments);

[finalDLRdata, finalObj, constraintsFlag] = fmincon(...
                        objFun, startDLRdata, ...
                        A, B, Aeq, Beq, lowerBound, upperBound, ...
                        @positiveAlphas, options);
        
finalDLRs = finalDLRdata(1:numel(startDLRdata)/2);
finalCoVdlrs = finalDLRdata(numel(startDLRdata)/2+1:end);

[~, CDFloss] = objectiveFunction([finalDLRs; finalCoVdlrs], ...
                        IMstripes, LRgivenIM, empiricalMoments, ...
                        fragMedian, fragStd, ...
                        Nsamples, weightMoments);